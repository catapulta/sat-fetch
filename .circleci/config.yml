# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

# Environment variables required:
# - PYPI_USER / PYPI_PASS: for publishing package to PyPi

version: 2

references:
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo
  save_repo: &save_repo
    save_cache:
      key: v1-repo-{{ .Branch }}-{{ .Revision }}
      paths:
        - ~/project

jobs:


  docker_build_and_test:
    machine:
      docker_layer_caching: true
    steps:
      - *restore_repo
      - checkout
      - *save_repo
      - run:
          name: Build Docker image
          command: |
            docker build -t satutils/sat-fetch:latest .
      - run:
          name: Test Docker image
          command: |
            docker run -v ${PWD}:/home/geolambda -it satutils/sat-fetch:latest pytest -v -s --cov satfetch --cov-report term-missing

  docker_deploy:
    machine:
      docker_layer_caching: true
    steps:
      - *restore_repo
      - run:
          name: Build Docker image
          command: |
            docker build -t satutils/sat-api:latest .
      - run:
          name: Deploy Docker image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            VERSION=`awk -F\' '{print $2,$4}' satfetch/version.py`
            docker tag satutils/sat-fetch:latest satutils/sat-fetch:${VERSION}
            docker push satutils/sat-fetch:latest 
            docker push satutils/sat-fetch:${VERSION}

  publish:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - *restore_repo
      - restore_cache:
          keys: 
            - v1-dependencies36-{{ checksum "requirements.txt"}}
            - v1-dependencies36
      - run:
          name: Deploy
          command: |
            python -m venv ~/venv
            . ~/venv/bin/activate
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            pip install twine
            python setup.py sdist
            #VERSION=`awk -F\' '{print $2,$4}' satfetch/version.py`
            #git tag $VERSION
            #git push origin $VERSION
            twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*


workflows:
  version: 2
  docker_build_and_test:
    jobs:
      - docker_build_and_test
      - docker_deploy:
          requires:
            - docker_build_and_test          
          filters:
            branches:
              only: master
      - publish:
          requires:
            - docker_deploy
          filters:
            branches:
              only: master
